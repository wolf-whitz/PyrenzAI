# Builder and publisher file 

name: Deploy to Docker Hub

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/pyrenzai
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        id: checkout
        uses: actions/checkout@v4

      - name: Cache Docker layers
        id: cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        id: login
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        id: build
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t $IMAGE_NAME:$IMAGE_TAG \
            --push \
            .
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Print Docker Image Link
        id: print
        run: |
          echo "ðŸš€ Image deployed at: https://hub.docker.com/r/$IMAGE_NAME"

      - name: Send Discord notification on failure
        if: failure()
        run: |
          echo "Sending Discord notification..."

          PAYLOAD=$(jq -n \
            --arg time "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
            --arg publisher "${{ secrets.DOCKERHUB_USERNAME }}" \
            --arg repo "$IMAGE_NAME" \
            --arg build_step "${{ github.job }}" \
            --arg logs "Check GitHub Actions logs for details." \
            --arg error_message "Deployment failed on job ${{ github.job }}." \
            '{
              content: "**ERROR ON DEPLOYMENT:**\n\nTime when error occurred: \($time)\nPublisher: \($publisher)\nRepo: \($repo)\nBuild step: \($build_step)\nLogs:\n```\n\($logs)\n```\nError Message:\n```\n\($error_message)\n```"
            }')

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "$PAYLOAD" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
